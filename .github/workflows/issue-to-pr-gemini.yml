name: "AI Auto PR from Issue (GEMINI)"

# Trigger only when an issue receives a label
on:
  workflow_dispatch:
  issues:
    types: [labeled]

# Minimal permissions required to create branches & PRs
permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  create-pr-from-issue:
    # Only run when the added label is exactly "auto-pr"
    if: ${{ github.event.label.name == 'autopr-gemini' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # keep full history if your patch application or create-pull-request needs it
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Generate patch with Gemini
        id: generate-patch
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          # This script should write a patch file at ./ai_fix.patch
          python .github/scripts/issue_to_pr_gemini.py

      - name: Validate patch file exists
        run: |
          if [ ! -f ./ai_fix.patch ]; then
            echo "Patch file not found (./ai_fix.patch). Exiting."
            exit 1
          fi
          echo "Patch found:"
          ls -l ./ai_fix.patch

      - name: Apply patch to workspace
        run: |
          # fail loudly if git apply fails
          git apply ./ai_fix.patch
          # show what changed (optional, helpful during debugging)
          git status --porcelain
          git --no-pager diff --name-only

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          # branch name can include issue number for uniqueness
          branch: "ai-fix/issue-${{ github.event.issue.number }}"
          title: "AI Fix for Issue #${{ github.event.issue.number }}: ${{ github.event.issue.title }}"
          body: |
            This PR was automatically generated by Google's Gemini AI to resolve issue #${{ github.event.issue.number }}.

            **Original Issue:**
            > ${{ github.event.issue.body }}
          commit-message: "feat: AI-generated fix for issue #${{ github.event.issue.number }}"
          # Optionally specify the token if you need a different token:
          # token: ${{ secrets.GITHUB_TOKEN }}

